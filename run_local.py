#!/usr/bin/env python3
"""
Script para executar o Sistema FEPERJ localmente
"""

import os
import sys
import subprocess
import webbrowser
from pathlib import Path

def check_python_version():
    """Verificar se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Erro: Python 3.8 ou superior √© necess√°rio")
        print(f"Vers√£o atual: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version.split()[0]} detectado")
    return True

def install_requirements():
    """Instalar depend√™ncias Python"""
    print("üì¶ Instalando depend√™ncias...")
    try:
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", "-r", "backend/requirements.txt"
        ])
        print("‚úÖ Depend√™ncias instaladas com sucesso")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao instalar depend√™ncias: {e}")
        return False

def create_env_file():
    """Criar arquivo .env se n√£o existir"""
    env_file = Path(".env")
    if not env_file.exists():
        print("üîß Criando arquivo .env...")
        env_content = """MONGO_URI=mongodb+srv://jamarestudo:49912170Lacrimosa1!@familiajamar.wu9knb3.mongodb.net/?retryWrites=true&w=majority&appName=Familiajamar
DATABASE_NAME=project0
SECRET_KEY=7qt1DUw9b4p4zKCC
"""
        env_file.write_text(env_content)
        print("‚úÖ Arquivo .env criado")
    else:
        print("‚úÖ Arquivo .env j√° existe")

def start_server():
    """Iniciar o servidor FastAPI"""
    print("üöÄ Iniciando servidor...")
    print("üìç URL: http://localhost:8000")
    print("üìñ Documenta√ß√£o da API: http://localhost:8000/docs")
    print("üîÑ Pressione Ctrl+C para parar o servidor")
    print("-" * 50)
    
    try:
        # Mudar para o diret√≥rio backend
        os.chdir("backend")
        
        # Iniciar o servidor
        subprocess.run([
            sys.executable, "-m", "uvicorn", "main:app", 
            "--host", "0.0.0.0", 
            "--port", "8000", 
            "--reload"
        ])
    except KeyboardInterrupt:
        print("\nüõë Servidor parado pelo usu√°rio")
    except Exception as e:
        print(f"‚ùå Erro ao iniciar servidor: {e}")

def open_browser():
    """Abrir navegador automaticamente"""
    try:
        webbrowser.open("http://localhost:8000")
        print("üåê Navegador aberto automaticamente")
    except:
        print("‚ö†Ô∏è N√£o foi poss√≠vel abrir o navegador automaticamente")

def main():
    """Fun√ß√£o principal"""
    print("=" * 60)
    print("üèãÔ∏è SISTEMA FEPERJ - CONFIGURA√á√ÉO LOCAL")
    print("=" * 60)
    
    # Verificar vers√£o do Python
    if not check_python_version():
        sys.exit(1)
    
    # Verificar se estamos no diret√≥rio correto
    if not Path("backend").exists() or not Path("frontend").exists():
        print("‚ùå Erro: Execute este script no diret√≥rio raiz do projeto (feperj-web)")
        sys.exit(1)
    
    # Instalar depend√™ncias
    if not install_requirements():
        sys.exit(1)
    
    # Criar arquivo .env
    create_env_file()
    
    print("\nüéØ Configura√ß√£o conclu√≠da!")
    print("\nüìã Informa√ß√µes importantes:")
    print("‚Ä¢ Usu√°rio padr√£o: admin")
    print("‚Ä¢ Senha padr√£o: admin123")
    print("‚Ä¢ Altere a senha ap√≥s o primeiro login!")
    
    # Perguntar se quer abrir o navegador
    try:
        response = input("\nüåê Abrir navegador automaticamente? (s/n): ").lower()
        if response in ['s', 'sim', 'y', 'yes']:
            open_browser()
    except:
        pass
    
    print("\n" + "=" * 60)
    
    # Iniciar servidor
    start_server()

if __name__ == "__main__":
    main()
